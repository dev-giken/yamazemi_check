/* src/styles/BlogList.module.css */

.container {
    max-width: 1200px; /* 幅を広げる */
    margin: 0 auto;
    padding: 1rem;
}

.main {
    max-width: 800px;
    margin: 0 auto;
    padding: 0.5rem 0.5rem;
    padding-bottom: 50px;
}

.paginationContainer {
    margin-top: 20px;
}

.title {
    font-size: 28px; /* 動的にサイズを調整 */
    white-space: nowrap; /* 改行を無効にする */
    overflow: hidden; /* はみ出しを隠す */
    text-overflow: ellipsis; /* はみ出した部分を省略記号にする */
    width: 99%; /* 必ず幅を指定する */
    display: block; /* インライン要素ではなくブロック要素として扱う */
    font-weight: bold;
    color: #333;
    padding-bottom: 10px;
}

.blogTitle {
    font-size: clamp(0.7rem, 1vw, 0.8rem); /* 動的にサイズを調整 */
    white-space: nowrap; /* 改行を無効にする */
    overflow: hidden; /* はみ出しを隠す */
    text-overflow: ellipsis; /* はみ出した部分を省略記号にする */
    width: 100%; /* 必ず幅を指定する */
    display: block; /* インライン要素ではなくブロック要素として扱う */
    font-weight: bold;
    color: #333;
}

.author {
    font-size: 0.6rem;
}

.details {
    font-size: clamp(0.6rem, 1vw, 0.6rem); /* Resizable font size */
    display: flex;
    align-items: center;
    justify-content: space-between;
}

/* Blur and white background for text */
.textOverlay {
    position: absolute;
    bottom: 0;
    width: 100%;
    height: calc(100% * 1 / 2); /* Adjusted to half the card height */
    background-color: rgba(200, 230, 240, 0.7); /* Light blue background with transparency */
    padding: 10px; /* Padding for text inside the overlay */
    display: flex;
    flex-direction: column;
    justify-content: center;
    backdrop-filter: blur(3px); /* Optional blur effect */
    transition: transform 0.5s ease-in-out; /* Smooth transition */
}
/* フィルターコンテナのスタイル */
.filter {
    display: flex;
    gap:14px; /* 各フィルター間の間隔 */
    margin-bottom: 20px;
}

.filter label {
    display: flex;
    font-size: 15px;
    align-items: center;
}

.filter select {
    padding: 0.1rem;
    border: 1px solid #ccc;
    border-radius: 0.375rem;
    margin-left: 4px;
}

.filter select:focus {
    border-color: #0066cc;
    outline: none;
}

.desktopOnly {
    display: none;
    flex-direction: column;
}
  
.mobileOnly {
    display: flex;
    flex-direction: row;
}

/* メディアクエリ: 画面幅が600px以上のときのフィルターのレイアウト */
@media (min-width: 600px) {
    .filter {
      gap: 8px;
    }

    .filter label {
      font-size: 15px;
    }

    .filter label:last-child {
      margin-right: 0;
    }
}

/* Bento Grid のスタイル */
.bentoGrid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(275px, 1fr)); /* カードの横幅を調整 */
    gap: 20px;
}



.gridItem {
    /* BentoCardのスタイルはbento-grid.tsxで定義 */
    display: flex;
    flex-grow: 1; /* 親要素がフレックスコンテナの場合、幅が自動的に広がる */
    min-width: 300px; /* 最小幅を設定して狭くなりすぎないようにする */
    align-items: center; /* アイコンと他の要素を縦方向に中央揃え */
    box-sizing: border-box;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3); /* より強い影を追加 */
    transition: box-shadow 1.0s ease-in-out; /* ホバー時の影のスムーズな変化 */
    height: 10rem; /* 2/3の高さに設定 */
}

.gridItem:hover {
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.4); /* ホバー時に影を強調 */
}

@media (max-width: 600px) { /* モバイルビュー */
    .title {
        font-size: 1.5rem;
    }

    .blogTitle {
        font-size: 0.7rem; /* 動的にサイズを調整 */
    }

    .author {
        margin-right: 0.5rem;
    }

    .details {
        flex-direction: row; /* Mobile: everything in one line */
        font-size: 0.5rem; /* Author, date, and category have the same font size */
        align-items: center; /* Vertically center the elements */
    }

    .categoryTag {
        font-size: inherit; /* Inherit font size from .details */
        margin-left: 0.5rem; /* Add some space between category tags */
    }

    .filter {
        display: flex;
        gap: 8px; /* 各フィルター間の間隔 */
    }
    
    .filter label {
        display: flex;
        font-size: 13px;
        align-items: center;
    }
    
    .filter select {
        padding: 0.1rem;
        border: 1px solid #ccc;
        border-radius: 0.375rem;
        margin-left: 5px;
    }
    
    .gridItem {
        height: calc(100vw * 0.35); /* 横幅に対して2/5の高さ */
    }

    .textOverlay {
        height: calc(100% * 1 / 3); /* Adjust height of overlay on mobile */
    }
}

/* Pagination の無効状態のスタイル */
.disabledPagination {
    opacity: 0.5;
    cursor: not-allowed;
}

/* カテゴリタグのスタイル */
.categoryTag {
    display: inline-block;
    padding: 0.1rem 0.25rem;
    border-radius: 0.375rem;
    background-color: #e0e0e0;
    color: #333;
    font-size: clamp(0.5rem, 1vw, 0.6rem); /* レスポンシブなフォントサイズ */
    margin-right: 0.25rem;
}

.categoryTag:hover {
    background-color: #d1d5db;
    color: #1f2937;
}

.dark .categoryTag {
    background-color: #444;
    color: #fff;
}

.dark .categoryTag:hover {
    background-color: #555;
    color: #fff;
}


/* Hover content styling */
.hoverContent {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    padding: 0.75rem; /* Reduced padding */
    background-color: rgba(0, 0, 0, 0.7); /* Dark background */
    color: white;
    transform: translateY(100%); /* Start below the visible area */
    transition: transform 0.5s ease-in-out; /* Smooth transition */
    height: 60%; /* Lower height of hover area */
  }
  
  /* On hover, slide the content up */
  .group:hover .hoverContent {
    transform: translateY(0); /* Slide up into view */
  }
  
  /* Make the font size responsive */
  .contentPreview {
    font-size: clamp(0.55rem, 1vw, 0.7rem); /* Smaller, responsive font size */
    margin-bottom: 0.4rem; /* Reduced margin */
  }
  
  /* Button container with right alignment */
  .buttonContainer {
    display: flex;
    justify-content: flex-end;
  }

  @media (min-width: 1024px) {
    .hoverContent {
      height: 70%; /* Lower height even more for mobile */
    }
  
    .contentPreview {
      font-size: 0.65rem; /* Smaller font size for mobile */
    }
  }
  
  /* Responsive adjustments for mobile */
  @media (max-width: 600px) {
    .hoverContent {
      padding: 0.4rem; /* Adjust padding for mobile */
      height: 65%; /* Lower height even more for mobile */
    }
  
    .contentPreview {
      font-size: clamp(0.7rem, 1vw, 1.2rem); /* Smaller font size for mobile */
    }
  }



/* Avatarのスタイル */
.AvatarRoot {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 2rem; /* サイズを統一 */
    height: 2rem; /* 幅と高さを同じにして常に円形にする */
    border-radius: 50%; /* 完全な円形にする */
    overflow: hidden;
    background-color: #6b7280; /* フォールバック背景色 */
    object-fit: cover; /* 画像をボックスに収める */
    flex-shrink: 0; /* 親要素が狭くなってもアイコンが縮まないようにする */
}

.AvatarImage {
    width: 100%;
    height: 100%;
    object-fit: cover; /* アイコン画像をボックス内に収める */
    border-radius: 50%; /* 画像自体も円形に保つ */
}

.AvatarFallback {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  font-size: 0.875rem;
  color: #ffffff;
  background-color: #6b7280; /* フォールバック背景色 */
}